name: Build and Release App

on:
  push:
    branches:
      - '*'
    
jobs:
  build:
    name: Building Release APK
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Flutter Setup
        uses: subosito/flutter-action@v2.8.0
        with:
          channel: 'stable'
      
      - name: Firebase login
        run: |
          dart pub global activate flutterfire_cli
          curl -sL https://firebase.tools | bash
          flutterfire configure -p ${{ secrets.PROJ_ID }} --platforms="android,ios" -i com.example.navigation \
          -a com.example.navigation -m -a com.example.navigation --token=${{ secrets.FIREBASE_TOKEN }}
        shell: bash
      
      - name: Extract SDK and prepare for building
        run: |
          curl -o heresdk-explore-flutter.tar.gz https://dl.dropboxusercontent.com/s/2rgack3gpf0j5kp/heresdk-explore-flutter-4.13.0.0.3315.tar.gz?dl=0
          echo "${{ secrets.HERE_CREDS }}" | base64 -d - > credentials.env
          mkdir -p plugins/here_sdk
          tar xzf heresdk-explore-flutter.tar.gz -C plugins/here_sdk
        shell: bash  
    
      - name: Build APK
        run: |
          flutter pub get
          flutter build apk --release
      
      - name: Create Artifact
        uses: actions/upload-artifact@master
        with:
          name: app
          path: build/app/outputs/flutter-apk/app-release.apk
  
  release:
    name: Release App on Fdroid
    runs-on: ubuntu-latest
    container:
      image: am271/fdroid-server:latest
      options: "--entrypoint /bin/bash"
    needs: build
    steps:
      - uses: actions/checkout@v3
      
      - name: Create basic directory structure
        run: mkdir repo
      
      - name: Set up repo secrets
        run: |
          echo "${{ secrets.KEYSTORE_P12 }}" | base64 -d - > keystore.p12
          echo "${{ secrets.CONFIG_YML }}" | base64 -d - > config.yml
          echo "${{ secrets.CLOUD_PRIV_KEY }}" | base64 -d - > id
          chmod 400 id
      
      - name: Load Artifact
        uses: actions/download-artifact@master
        with:
          name: app
          path: repo
      
      - name: Create metadata for repo
        run: ls && ls repo/ && fdroid update --create-metadata
          
      - name: Rsync repo with cloud
        run: yes | rsync -e "ssh -o StrictHostKeyChecking=no -i ./id -p ${{ secrets.NGROK_PORT }}" -avzh $PWD/repo/server/fdroid pi@${{ secrets.NGROK_URL }}:/var/www/fdroid
      
